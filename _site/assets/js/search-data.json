{
  "0": {
    "id": "0",
    "title": "Announcements",
    "content": "Announcements Announcements are stored in the _announcements directory and rendered according to the layout file, _layouts/announcement.html. Announcements We will not be updating this page with announcements. For the latest announcements, make sure to check our Piazza. Week 1 Announcements Homework 1 has been released here and is due Wednesday, 9/4 at 11:59PM. Some information here may be inaccurate. We will remove this warning once the site is complete. Week 0 Announcements Welcome to Data 100! We’re still getting this site set up. Some information here may be inaccurate. We will remove this warning once the site is complete.",
    "url": "http://localhost:4000/fa19/announcements/",
    "relUrl": "/announcements/"
  },
  "1": {
    "id": "1",
    "title": "Calendar",
    "content": "Calendar Discussion, Lab, and Lecture Discussion sections are in blue, labs are in green, and lectures are in yellow. Click a discussion / lab event to see the different GSIs teaching at that time. Office Hours GSI office hours are in blue, and Professor office hours are in pink. Note: All GSI office hours are in Evans 426, with the exception of OH from 8AM-2PM on Tuesdays, which are in Evans 342, and 2-5PM on Tuesdays, which are in Jacobs 220.",
    "url": "http://localhost:4000/fa19/calendar/",
    "relUrl": "/calendar/"
  },
  "2": {
    "id": "2",
    "title": "Home",
    "content": "Principles and Techniques of Data Science Data 100, Fall 2019 Josh Hug hug@cs.berkeley.edu Office Hour(s): F 2-3PM, 4-5PM (Soda 779) Deborah Nolan deborah_nolan@berkeley.edu Office Hour(s): T 1-2PM, F 9-10AM (Evans 395) Announcements We will not be updating this page with announcements. For the latest announcements, make sure to check our Piazza. Important Information When: Tuesdays and Thursdays, 9:30am-11:00am Where: 150 Wheeler What: See the syllabus News: We will post updates about the class on Piazza. This class is listed as STAT C100 (undergraduate) and STAT C200C (graduate). Goals Prepare students for advanced Berkeley courses in data-management, machine learning, and statistics, by providing the necessary foundation and context Enable students to start careers as data scientists by providing experience working with real-world data, tools, and techniques Empower students to apply computational and inferential thinking to address real-world problems Prerequisites While we are working to make this class widely accessible we currently require the following (or equivalent) prerequisites: Foundations of Data Science: Data8 covers much of the material in DS100 but at an introductory level. Data8 provides basic exposure to python programming and working with tabular data as well as visualization, statistics, and machine learning. Computing: The Structure and Interpretation of Computer Programs (CS 61A) or Computational Structures in Data Science (CS 88). These courses provide additional background in python programming (e.g., for loops, lambdas, debugging, and complexity) that will enable DS100 to focus more on the concepts in Data Science and less on the details of programming in python. Math: Linear Algebra (Math 54, EE 16a, or Stat89a): We will need some basic concepts like linear operators, eigenvectors, derivatives, and integrals to enable statistical inference and derive new prediction algorithms. This may be satisfied concurrently to DS100. About Data 100 Combining data, computation, and inferential thinking, data science is redefining how people and organizations solve challenging problems and understand their world. This intermediate level class bridges between Data8 and upper division computer science and statistics courses as well as methods courses in other fields. In this class, we explore key areas of data science including question formulation, data collection and cleaning, visualization, statistical inference, predictive modeling, and decision making.​ Through a strong emphasis on data centric computing, quantitative critical thinking, and exploratory data analysis, this class covers key principles and techniques of data science. These include languages for transforming, querying and analyzing data; algorithms for machine learning methods including regression, classification and clustering; principles behind creating informative data visualizations; statistical concepts of measurement error and prediction; and techniques for scalable data processing.",
    "url": "http://localhost:4000/fa19/",
    "relUrl": "/"
  },
  "3": {
    "id": "3",
    "title": "Calendar",
    "content": "Calendar",
    "url": "http://localhost:4000/fa19/old-calendar/",
    "relUrl": "/old-calendar/"
  },
  "4": {
    "id": "4",
    "title": "Policies",
    "content": "Policies Grading Late Policy and Extensions Collaboration Policy (don’t cheat) We Want You to Succeed Grading Undergraduate Grading Scheme Graduate Grading Scheme 20% Homeworks 10% Labs 5% Vitamins 5% Attendance (or 0% if opting out) 15% Projects 20% Midterms (10% each) 25% Final (or 30% if opting out) 20% Homeworks 5% Labs (or 0% if opting out) 15% Projects 15% Final Project 20% Midterms (10% each) 25% Final (or 30% if opting out) Homeworks: There will be roughly 7 homework assignments. Assignments must be completed individually and will mix programming and short answer questions. Your lowest (one) homework score will be dropped. There will be a short, undisclosed (&lt; 2 hour) grace period. Labs: There will usually be a lab every week, with some exceptions. Lab assignments will be graded on completion and correctness, but all test cases will be public. Your lowest two lab scores will be dropped. If you’re in the graduate version of the course, you may opt to not do labs, and instead have your final exam weighted more. There will be a short, undisclosed (&lt; 2 hour) grace period. Vitamins (undergrad only): Vitamins are due each week, along with the lab assignment, and your two lowest Vitamin scores will be dropped. Each Vitamin will be scored out of 3 points, and full credit (3 out of 3) will be given to any on-time submission that answers at least 3 questions correctly. Most Vitamins have 5 questions. Answering only 1 or 2 questions correctly will earn 1 or 2 points, respectively. Late submissions will not receive credit. Projects: We will have 3 projects this semester. Late projects will be marked off 10% per day late, past a small undisclosed grace period. Attendance (undergrad only): In order to encourage you to attend lecture, 5% of your grade is based on lecture attendance (attendance is not taken in lab or discussion section). We will post a Google form each lecture for you to fill out. You will only need to check in to 2/3 of all lectures in order to receive the full 5% credit. If you would rather not have attendance be a part of your grade, we will weigh your final exam 5% more (30% instead of 25%). If you attend fewer than 2/3rds of the lectures, then we will interpolate as you’d expect between the two policies, e.g. attending 1/3rd of the lectures would make your final worth 27.5%. Midterms: We will have 2 midterms this semester. Midterm 1 will be on October 8th from 8-9:30PM. Midterm 2 will be on November 13th from 8-9:30PM. Final: The final exam will be on Tuesday, December 17th, from 3-6pm. If you cannot make the regular final exam time for a pre-approved reason, there will be alternate final exam times. We will be releasing forms on Piazza in the first few weeks of the semester so that you can let us know of your conflicts (for both midterms and the final). Undergrad vs. grad: All students enrolled in the graduate version of the course (CS C200 or Stat C200C, i.e. Data 200) will be graded according to the Graduate grading scheme. Students enrolled in the undergraduate version of the course (Data 100) can opt for the graduate grading scheme, which involves a final project. All students in Data 100 who complete a final project will be scored under both grading schemes and given the higher of the two scores. Late Policy and Extensions No late homeworks or labs will be accepted unless an extension is granted in advance, past a small grace period. Late projects will be accepted according to the policy listed above (10% off per day late). In order to request an extension for an assignment, please fill out this form at least 12 hours in advance of an assigment’s due date (unless there is a special circumstance). Collaboration Policy (don’t cheat) Data science is a collaborative activity. While you may talk with others about the homework, we ask that you write your solutions individually. If you do discuss the assignments with others please include their names at the top of your notebook. Keep in mind that content from the homework and vitamins will likely be covered on both the midterm and final. We will be following the EECS departmental policy on Academic Honesty, so be sure you are familiar with it. We Want You to Succeed If you are feeling overwhelmed, visit our office hours and talk with us. We know college can be stressful and we want to help you succeed!",
    "url": "http://localhost:4000/fa19/policies/",
    "relUrl": "/policies/"
  },
  "5": {
    "id": "5",
    "title": "Resources",
    "content": "Resources Exam Resources Semester Midterm 1 Midterm 2 Final Summer 2019 Exam (Solutions) [Video]   Exam (Solutions) Spring 2019 Exam (Solutions) Exam (Solutions) Exam (Solutions) Fall 2018 Exam (Solutions)   Exam (Solutions) Spring 2018 Exam (Solutions)   Exam (Solutions) [Video] Fall 2017 Exam (Solutions) [Video]   Exam (Solutions) Fall 2017 Practice Exam (Solutions)   Exam (Solutions) Spring 2017     Exam (Solutions) Other Resources We will be posting all lecture materials on the course syllabus. In addition, they will also be listed in the following publicly visible Github Repo. Here is a collection of resources that will help you learn more about various concepts and skills covered in the class. Learning by reading is a key part of being a well rounded data scientist. We will not assign mandatory reading but instead encourage you to look at these and other materials. If you find something helpful, post it on Piazza, and consider contributing it to the course website. You can send us changes to the course website by forking and sending a pull request to the course website github repository. You will then become part of the history of Data 100 at Berkeley. Local Setup Click here to read our guide on how to set up our development environment locally (as an alternative to using DataHub). Probability Practice We’ve compiled a few practice probability problems that we believe may help in understanding the ideas covered in the course. They can be found here, along with their solutions. We’d also like to point you to the textbook for Stat 88, an introductory probability course geared towards data science students at Berkeley. Web References As a data scientist you will often need to search for information on various libraries and tools. In this class we will be using several key python libraries. Here are their documentation pages: The Bash Command Line: Linux and Bash: Intro to Linux, Cloud Computing (which you can skip for the purposes of this class), and the Bash command line. You can skip all portions that don’t pertain to using the command line. Bash Part 2: Part 2 of the intro to command line. Python: Python Tutorial: Teach yourself python. This is a pretty comprehensive tutorial. Python + Numpy Tutorial this tutorial provides a great overview of a lot of the functionality we will be using in DS100. Python 101: A notebook demonstrating a lot of python functionality with some (minimal explanation). Plotting: matplotlib.pyplot tutorial: This short tutorial provides an overview of the basic plotting utilities we will be using. seaborn: The Seaborn library has some nice additional visualization functions that we may use occasionally. Pandas: The Pandas Cookbook: This provides a nice overview of some of the basic Pandas functions. However, it is slightly out of date. Learn Pandas A set of lessons providing an overview of the Pandas library. Python for Data Science Another set of notebook demonstrating Pandas functionality. Books Because data science is a relatively new and rapidly evolving discipline there is no single ideal textbook for this subject. Instead we plan to use reading from a collection of books all of which are free. However, we have listed a few optional books that will provide additional context for those who are interested. Principles and Techniques of Data Science This is the accompanying textbook written for DS100 course. Introduction to Statistical Learning (Free online PDF) This book is a great reference for the machine learning and some of the statistics material in the class Data Science from Scratch (Available as eBook for Berkeley students) This more applied book covers many of the topics in this class using Python but doesn’t go into sufficient depth for some of the more mathematical material. Doing Data Science (Available as eBook for Berkeley students) This books provides a unique case-study view of data science but uses R and not Python. Python for Data Analysis (Available as eBook for Berkeley students). This book provides a good reference for the Pandas library.",
    "url": "http://localhost:4000/fa19/resources/",
    "relUrl": "/resources/"
  },
  "6": {
    "id": "6",
    "title": "Local Setup",
    "content": "Local Setup We will still be using datahub as our primary computing environment. This page serves as a guide for alternative environment setup. In other words: you don’t have to follow these instructions unless you’d like an alternative to datahub. Contents Installing conda by OS OSX Windows Linux Creating your environment Working on assignments locally Opening notebooks locally Verifying your environment Removing the environment to start over Submitting your work FAQ OSX You will need access to the command line. On a Mac, you can open the Terminal by opening Spotlight (Cmd + Space) and typing &quot;Terminal&quot;. Alternatively, you can go to your Applications screen and select Terminal (it might be in the folder named &quot;Other&quot;) Homebrew is a package manager for OSX. If you haven’t already, install it by running the following in the command line (copy, paste, and enter): # This downloads the Ruby code of the installation script and runs it /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; Verify your installation by making sure brew --version doesn’t error at your terminal. Download and install Anaconda: # Uses curl to download the installation script curl https://repo.continuum.io/miniconda/Miniconda2-4.5.11-MacOSX-x86_64.sh &gt; miniconda.sh # Run the miniconda installer (you will need to enter your password) bash miniconda.sh Close and restart your terminal. Ensure the installation worked by running conda --version. You may remove the miniconda.sh script now if you’d like. Click here to continue to the next part of the setup. Windows Windows is especially prone to error if you aren’t careful about your configuration. If you’ve already had Anaconda or git installed and can’t get the other to work, try uninstalling everything and starting from scratch. Installing Anaconda: Visit the Anaconda website and download the installer for Python 3.7. Download the 64-bit installer if your computer is 64-bit (most likely), the 32-bit installer if not. See this FAQ if you are unsure. Run the exe file to install Anaconda. Leave all the options as default (install for all users, in the default location). Make sure both of these checkboxes are checked: 1) Verify that the installation is working by starting the Anaconda Prompt (you should be able to start it from the Start Menu) and typing python: Notice how the python prompt shows that it is running from Anaconda. Now you have conda installed! From now on, when we talk about the “Terminal” or “Command Prompt”, we are referring to the Anaconda Prompt that you just installed. Click here to continue to the next part of the setup. Linux These instructions assume you have apt-get (Ubuntu and Debian). For other distributions of Linux, substitute the appropriate package manager. Your terminal program allows you to type commands to control your computer. On Linux, you can open the Terminal by going to the Applications menu and clicking “Terminal”. Install wget. This is a command-line tool that lets you download files / webpages at the command line. sudo apt-get install wget Download the Anaconda installation script: wget -O install_anaconda.sh https://repo.continuum.io/miniconda/Miniconda2-4.5.11-Linux-x86_64.sh 4) Install Anaconda: bash install_anaconda.sh 5) Close and restart your terminal. Ensure the installation worked by running `conda --version`. You may remove the install_anaconda.sh script now if you’d like. Click here to continue to the next part of the setup. Creating your environment These instructions are the same for OSX, Windows, and Linux. Download the data100 data100_environment.yml] from the course repository here or: # download via curl curl https://raw.githubusercontent.com/DS-100/fa19/gh-pages/resources/assets/local_setup/data100_environment.yml &gt; data100_environment.yml # OR download via wget wget -O data100_environment.yml https://raw.githubusercontent.com/DS-100/fa19/gh-pages/resources/assets/local_setup/data100_environment.yml This YAML file is what we use to specify the dependencies and packages (and their versions) we wish to install into the conda environment we will make for this class. The purpose of the environment is to ensure that everyone in the course is using the same package versions for every assignment whether or not they are working on datahub. This is to prevent inconsistent behavior due to differences in package versions. Using the Terminal, navigate to the directory where you downloaded data100_environment.yml. Run these commands to create a new conda environment. Each conda environment maintains its own package versions, allowing us to switch between package versions easily. For example, this class uses Python 3, but you might have another that uses Python 2. With a conda environment, you can switch between those at will. # sanity check on conda installation. Should be 4.5 or higher conda --version # update conda just in case it&#39;s out of date # enter y if prompted to proceed conda update conda # download git conda install -c anaconda git # Create a python 3.6 conda environment with the full set # of packages specified in environment.yml (jupyter, numpy, pandas, ...) conda env create -f data100_environment.yml # Switch to the data100 environment conda activate data100 # Check if packages are in the environment # This should not be empty! conda list From now on, you can switch to the data100 env with conda activate data100, and switch back to the default env with conda deactivate. Working on assignments locally These instructions are the same for OSX, Windows, and Linux. To work on assignments, you should fetch the assignment on datahub, navigate to the assignment folder and click on the download icon on the top right: Then you can unzip the files into a folder of your choosing. Remember the location of your assignment files because you’ll need to navigate to that folder to open the notebook. Opening notebooks locally To open Jupyter notebooks, you’ll navigate to parent directory of the assignment in your terminal, activate the environment, and start up a jupyter server. This will look something like: cd path/to/assignment/directory conda activate data100 jupyter notebook This will automatically open the notebook interface in your browser. You can then browse to a notebook and open it. Make sure to always work in the data100 conda environment when you are using jupyter notebooks for this class. This ensures you have all the necessary packages required for the notebook to run. Verifying Your Environment You can tell if you are correct environment if your terminal looks something like: Additionally, conda env list outputs a list of all your conda environments, and data100 should appear with a * next to it (the active one). Removing the environment to start over If you feel as if you’ve messed up and need to start over, you can remove the environment with conda remove --name data100 --all To verify that the environment was removed, in your Terminal window or an Anaconda Prompt, run: conda info --envs Which should then no longer display the data100 environment. Submitting your work Submissions will still be handled via datahub. To upload your work, navigate to the appropriate assignment folder on datahub and click on the upload button on the top right. Remember to validate, submit, and upload to Gradescope (for homeworks and projects). FAQ Shell not properly configured to use conda activate If you had an older version of Anaconda installed (perhaps for another class), you may see the following message. Follow the instructions in the prompt to: Enable conda for all users sudo ln -s ... Put the base environment on PATH echo &quot;conda activate&quot; &gt;&gt; ~/.bash_profile&quot;. Note that ~/.bash_profile may be something different like ~/.bashrc. Manually remove the line that looks like export PATH=&quot;/usr/local/miniconda3/bin:$PATH&quot; from your .bash_profile. Use your favorite plaintext editor to do this (do not use a rich text editor like Microsoft Word!).",
    "url": "http://localhost:4000/fa19/setup/",
    "relUrl": "/setup/"
  },
  "7": {
    "id": "7",
    "title": "Staff",
    "content": "Staff Jump to Instructors, Teaching Assistants, or Readers Note: Some office hours may change week-to-week. Consult the calendar for the most up-to-date office hours for each GSI. Instructors {% assign instructors = site.staffers | where: &#39;role&#39;, &#39;Instructor&#39; %} {% for staffer in instructors %} {{ staffer }} {% endfor %} Teaching Assistants {% assign teaching_assistants = site.staffers | where: &#39;role&#39;, &#39;Teaching Assistant&#39; %} {% for staffer in teaching_assistants %} {{ staffer }} {% endfor %} Readers {% assign readers = site.staffers | where: &#39;role&#39;, &#39;Reader&#39; %} {% for staffer in readers %} {{ staffer }} {% endfor %}",
    "url": "http://localhost:4000/fa19/staff/",
    "relUrl": "/staff/"
  },
  "8": {
    "id": "8",
    "title": "Syllabus",
    "content": "Syllabus Please note: This schedule is still tentative, and is likely to change. See the calendar to see the scheduling of our weekly events (discussion, lab, office hours, etc). {% for module in site.modules %} {{ module }} {% endfor %}",
    "url": "http://localhost:4000/fa19/syllabus/",
    "relUrl": "/syllabus/"
  }
  
}
